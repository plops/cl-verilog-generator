(defpackage :cl-ov2640
  (:use :cl)
  )
(in-package :cl-ov2640)

;; register parser for ov2640 camera

(let
    ((l
       `((0 rsvd)
	 (5 r-bypass 1 rw (((7 1) rsvd)
			     ((0) bypass-dsp-select ((0 dsp) (1 bypass)))))
	 (6 rsvd)
	 (44 qs 0c rw quantization-scale-factor)
	 (45 rsvd)
	 (50 ctrli 0 rw (((7) lp-dp)
			 ((6) round)
			 ((5 3) v-divider)
			 ((2 0) h-divider)))
	 (51 hsize 40 rw (((7 0) (aref h-size (slice 7 0)) :type real/4)))
	 (52 vsize f0 rw (((7 0) (aref v-size (slice 7 0)) :type real/4)))
	 (53 xoffl 0 rw (((7 0) (aref offset-x (slice 7 0)))))
	 (54 yoffl 0 rw (((7 0) (aref offset-y (slice 7 0)))))
	 (55 vhyx 8 rw (((7) (aref v-size 8))
			((6 4) (aref offset-y (slice 10 8)))
			((3) (aref h-size 8))
			((2 0) (aref offset-x (slice 10 8)))))
	 (56 dprp 0 rw (((7 4) dp-sely)
			((3 0) dp-selx)))
	 (57 test 0 rw (((7) (aref h-size 9))
			((6 0) rsvd)))
	 (5a zmow 58 rw (((7 0) (aref outw (slice 7 0)) :type real/4)))
	 (5b zmoh 48 rw (((7 0) (aref outh (slice 7 0)) :type real/4)))
	 (5c zmhh 0 rw (((7 4) zoom-speed)
			((2) (aref outh 8))
			((1 0) (aref outw (slice 9 8)))))
	 (5d rsvd)
	 (7c bpaddr 0 rw (((7 0) sde-address)))
	 (7d bpdata 0 rw (((7 0) sde-data)))))))
